def calculate_velocity(acceleration, angular_velocity, orientation):
    # Convert acceleration and angular velocity to Earth frame
    R = np.array([[np.cos(orientation[2]), -np.sin(orientation[2]), 0],
                  [np.sin(orientation[2]), np.cos(orientation[2]), 0],
                  [0, 0, 1]])
    acceleration_earth = np.matmul(R, acceleration)
    angular_velocity_earth = np.matmul(R, angular_velocity)
    
    # Calculate velocity
    dt = 0.01  # time step (in seconds)
    velocity = np.zeros_like(acceleration_earth)
    for i in range(1, acceleration_earth.shape[0]):
        # Integrate acceleration
        velocity[i] = velocity[i-1] + acceleration_earth[i] * dt
        
        # Integrate angular velocity
        angle_change = angular_velocity_earth[i] * dt
        R = np.array([[np.cos(angle_change[2]), -np.sin(angle_change[2]), 0],
                      [np.sin(angle_change[2]), np.cos(angle_change[2]), 0],
                      [0, 0, 1]])
        velocity[i] = np.matmul(R, velocity[i])
        
    return velocity