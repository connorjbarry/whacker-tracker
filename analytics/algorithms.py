import math
from tabulate import tabulate
import matplotlib.pyplot as plt

G = 9.80665

CLUBHEADTOBALL = {
    "driver": 1.477876,
    "3wood": 1.476636,
    "5wood": 1.475728,
    "hybrid": 1.460112,
    "2iron": 1.454545,
    "3iron": 1.448980,
    "4iron": 1.427083,
    "5iron": 1.404255,
    "6iron": 1.3840435,
    "7iron": 1.333333,
    "8iron": 1.321839,
    "9iron": 1.2822353,
    "pw": 1.228916,
    "gw": 1.222222,
    "sw": 1.157895,
}

CLUBLOFT = {
    "driver": 10.5,
    "3wood": 15,
    "5wood": 18,
    "hybrid": 21,
    "2iron": 16,
    "3iron": 21,
    "4iron": 24,
    "5iron": 27,
    "6iron": 30,
    "7iron": 34,
    "8iron": 38,
    "9iron": 42,
    "pw": 46,
    "gw": 51,
    "sw": 54,
}

DISTMULTIPLIER_CH = 3.16
DISTMULTIPLIER_BS = 2.04

CLUB_MASS = 0

TIME_PER_DATA_POLL = 0.038


"""
? DATA FORMAT:
[     0]   -993 -> angular x
[     1]   -580 -> angular y
[     2]  -1153 -> angular z
[     3]  -2734 -> linear x
[     4]    503 -> linear y
[     5]   1561 -> linear z

[     0]   -381
[     1]   -790
[     2]    437
[     3]   -224
[     4]   1391
[     5]   1181

[     0]    183
[     1]   -187
[     2]    610
[     3]   -216
[     4]   1327
[     5]   1402

Data comes in as a list of 6 values, the first three being the angular (x, y, z) acceleration (dps -> degrees per second) of the club, and the last three being the linear (x, y, z) acceleration (g) of the club.


* linear_accel = [data[i::3] for i in range(3)]

data = [
 -794,
 -222,
   57,
 -107,
 1301,
 1486,
 -759,
 -343,
  -23,
  -73,
 1245,
 1706,
 -667,
 -397,
  -92,
  -63,
 1197,
 1861,
 -553,
 -376,
 -108,
  -67,
 1171,
 1916,
 -471,
 -310,
  -92,
  -65,
 1135,
 1866,
 -461,
 -211,
  -60,
  -63,
 1090,
 1861
]

data2 = [
 -381,
 -790,
  437,
 -224,
 1391,
 1181,
 -765,
  -86,
  286,
 -187,
 1384,
 1259,
 -755,
  -64,
  136,
 -158,
 1351,
 1342
]
"""


def process_data(data):
    temp = [
        -794,
        -222,
        57,
        -107,
        1301,
        1486,
        -759,
        -343,
        -23,
        -73,
        1245,
        1706,
        -667,
        -397,
        -92,
        -63,
        1197,
        1861,
        -553,
        -376,
        -108,
        -67,
        1171,
        1916,
        -471,
        -310,
        -92,
        -65,
        1135,
        1866,
        -461,
        -211,
        -60,
        -63,
        1090,
        1861
    ]

    data_length = len(data)
    len_sensor_data = data_length // 3
    sensor_one = data[0:len_sensor_data]
    sensor_two = data[len_sensor_data:len_sensor_data * 2]
    sensor_three = data[len_sensor_data * 2:len_sensor_data * 3]

    linear_accel = [sensor_one[i:i+3]
                    for i in range(0, len(sensor_one), 3)][1::2]
    angular_accel = [sensor_one[i:i+3]
                     for i in range(0, len(sensor_one), 3)][::2]
    # print(f'linear_accel: {linear_accel}\n angular_accel: {angular_accel}')
    linear_accel_x = _get_gs([x[0] for x in linear_accel])
    angular_accel_x = _get_dps([x[0] for x in angular_accel])
    linear_accel_y = _get_gs([x[1] for x in linear_accel])
    angular_accel_y = _get_dps([x[1] for x in angular_accel])
    linear_accel_z = _get_gs([x[2] for x in linear_accel])
    angular_accel_z = _get_dps([x[2] for x in angular_accel])

    direction = ['' for i in range(len(linear_accel_x))]
    for j, accel in enumerate(angular_accel):
        highestAccel = 0
        for i in range(len(accel)):
            if abs(accel[i]) > highestAccel and i == 0:
                if accel[i] > 0:
                    direction[j] = '+x'
                else:
                    direction[j] = '-x'
                highestAccel = abs(accel[i])
            elif abs(accel[i]) > highestAccel and i == 1:
                if accel[i] > 0:
                    direction[j] = '+y'
                else:
                    direction[j] = '-y'
                highestAccel = abs(accel[i])
            elif abs(accel[i]) > highestAccel and i == 2:
                if accel[i] > 0:
                    direction[j] = '+z'
                else:
                    direction[j] = '-z'
                highestAccel = abs(accel[i])

    total_accel = [math.sqrt(i**2 + j**2 + k**2) for i, j,
                   k in zip(linear_accel_x, linear_accel_y, linear_accel_z)]

    total_angular_accel = [math.sqrt(i**2 + j**2 + k**2) for i, j,
                           k in zip(angular_accel_x, angular_accel_y, angular_accel_z)]
    total_linear_accel = [math.sqrt(i**2 + j**2 + k**2) for i, j,
                          k in zip(linear_accel_x, linear_accel_y, linear_accel_z)]

    total_accel = (_convert_from_g(total_accel))
    total_linear_accel = (_convert_from_g(total_linear_accel))
    linear_accel_z = (linear_accel_z)

    return linear_accel, angular_accel, linear_accel_x, linear_accel_y, linear_accel_z, angular_accel_x, angular_accel_y, angular_accel_z, direction, total_accel, total_angular_accel, total_linear_accel


def get_club_head_speed(linear_z, total_accel):
    velo_f = 0

    time_list = [i * TIME_PER_DATA_POLL for i in range(len(total_accel))]

    linear_z_dir = list(filter(lambda x: x < 0, linear_z[2:]))

    len_linear_z_dir = len(linear_z_dir)
    time = TIME_PER_DATA_POLL * len_linear_z_dir
    len_linear_z_velo = (sum(linear_z_dir) / len_linear_z_dir) / time
    print(f'len_linear_z_velo: {len_linear_z_velo}')

    velo_f = _convert_from_g(linear_z)

    # velo_f = [(total_accel[i])
    #           * TIME_PER_DATA_POLL for i in range(len(total_accel))]

    position = [i / 2 + TIME_PER_DATA_POLL for i in velo_f]
    position_sum = [sum(position[2:i]) for i in range(len(position) - 2)]

    velo_f_mph = [abs(x) * 2.23694 for x in velo_f]

    v_len = len(velo_f_mph) if len(velo_f_mph) > 0 else 1

    final_velo = max(velo_f_mph[2:v_len])

    # ! NEED TO ENSURE CORRECT UNITS
    return velo_f, velo_f_mph, final_velo


def get_ball_speed(club, club_head_speed):
    return club_head_speed * CLUBHEADTOBALL[club]


def get_ball_distance(club_head_speed, ball_speed):
    dist_from_head_speed = club_head_speed * DISTMULTIPLIER_CH - 85.2
    dist_from_ball_speed = ball_speed * DISTMULTIPLIER_BS - 65.2

    # dist_from_head_speed = 0 if dist_from_head_speed < 0 else dist_from_head_speed
    # dist_from_ball_speed = 0 if dist_from_ball_speed < 0 else dist_from_ball_speed

    error = (dist_from_head_speed - dist_from_ball_speed)

    # TODO: Fix this
    return (dist_from_head_speed + dist_from_ball_speed) / 2


def get_smash_factor(club_head_speed, ball_speed):
    return ball_speed / club_head_speed


def get_launch_angle(club, angle):
    pass


def get_club_face_angle(anglur_accel_y):
    ang = anglur_accel_y[2:]
    ang = [theta * TIME_PER_DATA_POLL for theta in ang]
    return max(ang)


def _convert_from_g(data):
    return [round(i * G, 2) for i in data]


def _get_gs(data):
    return [(i / 32678) * 8 for i in data]


def _get_dps(data):
    return [(i * 8.75) / 1000 for i in data]


def process_individal_sensor_data(data):
    pass


def get_club_position_data(linear_accel):
    accel = []
    for data in linear_accel:
        accel.append(_convert_from_g(_get_gs(data)))

    point_pos = []
    pos = []
    for data in accel:
        for i in data:
            point_pos.append(i/2 + TIME_PER_DATA_POLL)
        pos.append(point_pos)
        point_pos = []

    x_pos = [i[0] for i in pos]
    y_pos = [i[1] for i in pos]
    z_pos = [i[2] for i in pos]

    x_pos_sum = [sum(x_pos[2:i]) for i in range(len(x_pos) - 2)]
    y_pos_sum = [sum(y_pos[2:i]) for i in range(len(y_pos) - 2)]
    z_pos_sum = [sum(z_pos[2:i]) for i in range(len(z_pos) - 2)]

    return x_pos_sum, y_pos_sum, z_pos_sum

    # print([i for i in linear_accel if i == 1])
    # accel = _get_gs([i for i in linear_accel])
    # print(linear_accel)


def plot_position(x, y, z):
    # 3d plot x y z
    # label the plots and axes
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    ax.scatter(x, y, z)
    ax.set_xlabel('X Label')
    ax.set_ylabel('Y Label')
    ax.set_zlabel('Z Label')

    # set title
    plt.title('3D Plot of Position')

    plt.show()


def plot_acceleration(linear_accel, angular_accel, linear_velo, position=[0 for i in range(104)]):
    data_len = len(linear_accel)
    time = [i * TIME_PER_DATA_POLL for i in range(data_len - 2)]
    fig, axs = plt.subplots(2, 2)
    # plot the linear acceleration
    axs[0, 0].plot(time, linear_accel[2:])
    axs[0, 0].scatter(time, linear_accel[2:])

    # plot the angular acceleration
    axs[0, 1].plot(time, angular_accel[2:])
    axs[0, 1].scatter(time, angular_accel[2:])

    # plot the position
    position_time = [i * TIME_PER_DATA_POLL for i in range(len(position) - 2)]
    axs[1, 0].plot(time, position)
    axs[1, 0].scatter(time, position)

    # plot the linear velocity
    axs[1, 1].plot(time, linear_velo[2:])
    axs[1, 1].scatter(time, linear_velo[2:])

    # set the titles
    axs[0, 0].set_title('Linear Acceleration vs Time')
    axs[0, 1].set_title('Angular Acceleration vs Time')
    axs[1, 0].set_title('Position vs Time')
    axs[1, 1].set_title('Linear Velocity vs Time')

    # set the x and y labels
    axs[0, 0].set(xlabel='Time (s)', ylabel='Linear Acceleration (m/s^2)')
    axs[0, 1].set(xlabel='Time (s)',
                  ylabel='Angular Acceleration (degrees/s^2)')
    axs[1, 0].set(xlabel='Time (s)', ylabel='Position (m)')
    axs[1, 1].set(xlabel='Time (s)', ylabel='Linear Velocity (m/s)')

    # set the tight layout
    plt.tight_layout()

    # show the plot
    plt.show()


if __name__ == "__main__":
    # data = [58, -6284, 1224, -1927, 222, -619, -19929, -22686, -20341, 3275, -32129, -8871, -424, -483, -189, -3881, 494, -1198, 218, -5088, 645, -3872, 479, -1244, -351, -361, -61, -3865, 446, -1222, -375, -350, -144, -3866, 456, -1181, -273, -410, -3, -3890, 466, -1232, -541, -515, -116, -3880, 463, -1217, -484, -528, -21, -3871, 378, -1140, -114, -532, 113, -3882, 423, -1190, -83, -361, 8, -3893, 440, -1251, -551, -446, -121, -3885, 440, -1223, -829, -574, -314, -3906, 441, -1205, -17, -306, 114, -3914, 391, -1214, -192, -406, -38, -3817, 299, -1151, -769, -588, -375, -3851, 399, -1187, -405, -321, -541, -3719, 406, -1040, -124, -327, -19, -3759, 369, -1088, 22, 83, -442, -4016, 493, -1014, 533, 128, -300, -3785, 364, -964, 2094, -222, 447, -4124, 539, -1097, -778, -767, -991, -4169, 463, -1184, 6544, 2024, 2830, -4128, 572, -775, 2949, 317, 1141, -4066, 833, -818, -4642, -1382, 453, -5577, 1258, 228, 11072, 3577, 5951, -4769, 876, -550, -5073, -4213, 601, -5349, -1026, 886, -15195, -4693, -3821, -5655, -101, 746, 7623, -6577, 3789, -5223, -540, 2062, 5294, -5426, 3891, -5111, -816, 1637, -583, -13283, -2032, -5984, -1010, 1359, 4211, -9949, 770, -5700, -615, 1743, 266, -16413, -4737, -6786, -847, 597, 978, -14415, -2324, -6349, -818, 928, 9427, -16437, -2688, -6601, 318, 438, 7683, -15726, -3473, -6759, -870, 288, -1689, -18957, -8479, -5494, 130, 172, -7253, -21084, -10241, -6020, 423, 383, 628, -17093, -7983, -4874, 593, 188, -208, -18366, -8003, -5326, 789, 258, -850, -15259, -5717, -3960, 962, 590, 7085, -14376, -3425, -4510, 890, 481, 4018, -10752, -1006, -2987, 890, 863, 4889, -12124, -1702, -3387, 732, 526, 5768, -6387, 798, -2072, 625, 956, 2509, -9016, -973, -2396, 499, 907, 2233, -4059, -15, -1451, 429, 1250, 2388, -5795, -542, -1812, 666, 1208, 237, -1506, 313, -1244, 569, 1246, 1877, -2708, 424, -1294, 540, 1239, 1031, 1852, 1216, -1270, 537, 869, -207, -44, 483, -1228, 479, 1116, 1248, 5819, 1385, -1448, 404, 1058, 1978, 3869, 1780, -1358, 615, 941, 1926, 9657, 1954, -2140,
    #         561, 376, 1547, 8077, 1701, -1756, 368, 720, 3288, 13693, 2423, -3311, 552, 164, 3199, 11456, 2391, -2600, 392, 332, 2419, 16889, 1786, -4547, 700, -605, -591, 14220, 261, -3868, 738, -347, -1127, 20796, 251, -6227, 856, -1050, 2108, 19234, 1731, -5495, 980, -650, -4975, 23157, -471, -7049, 846, -1570, -202, 22946, 1132, -6664, 854, -1417, -1597, 25083, 1650, -7536, 544, -2268, -5879, 23621, -205, -7376, 388, -2118, -11145, 24753, -3529, -8130, 468, -2729, -4915, 25709, -711, -7854, 1139, -2179, -6853, 24152, 1128, -7682, 369, -2961, -8530, 24410, -506, -7911, -269, -3052, -15277, 20545, -1704, -7031, 277, -2401, -11772, 21743, -1001, -7274, 552, -2666, -12258, 13927, -428, -4821, 261, -2284, -17877, 17364, -2302, -6150, 171, -2613, -14342, 8642, -1206, -3520, 161, -1599, -15492, 10154, -1771, -4165, 494, -1652, -6285, 6985, 1264, -2639, 651, -1496, -8353, 8597, 1360, -3083, 195, -1631, -5153, 3016, -419, -2040, 821, -1161, -5799, 4998, 575, -2308, 813, -1321, -1325, 867, -1155, -1610, 1118, -1012, -2342, 2240, -455, -1772, 906, -1050, 493, -1685, -2211, -1585, 1163, -1102, -839, -549, -1826, -1529, 1161, -977, 2235, -4146, -3044, -2051, 1378, -1431, 2041, -2754, -2285, -1750, 1279, -1294, 3880, -5328, -4741, -2648, 925, -1647, 3159, -5002, -3981, -2353, 1068, -1376, 2581, -8241, -7280, -3251, 1570, -1963, 3945, -7066, -5982, -2872, 1003, -1899, -1873, -11051, -11509, -3822, 1150, -2376, -4758, -11499, -11948, -3501, 1346, -2085, 10972, -9186, -8173, -4167, 1372, -2365, 2508, -11336, -11848, -4058, 1141, -2449, 6746, -11428, -9008, -4777, 1709, -2485, 7914, -10939, -9606, -4504, 1941, -2516, 11193, -9226, -5344, -4812, 1671, -2419, 4533, -11693, -9548, -4907, 1558, -2583, 3136, -10310, -6267, -4556, 1796, -2398, 6930, -9764, -5594, -4800, 2052, -2257, 9415, -6516, -154, -4534, 2165, -2189, 9804, -7710, -1883, -4313, 1757, -2320, 5149, -4155, -477, -4478, 1840, -2274, 2870, -6716, -2044, -4632, 2018, -2251, 494, -2055, -241, -4382, 1855, -2216, 3625, -2906, -147, -4381, 1974, -2167]
    # data = [35, -6284, 1474, 1553, -440, -1204, -17882, -22942, -20469, 3275, -15746, -679, 111, 358, -109, 3143, -905, -2372, 232, -4969, 679, 3085, -881, -2358, 47, -87, -296, 3128, -927, -2369, 107, -238, -269, 3169, -935, -2394, 68, -313, -317, 3173, -921, -2392, 38, -154, -300, 3150, -921, -2392, 111, -112, -285, 3204, -886, -2398, 108, -91, -330, 3179, -899, -2393, 186, 21, -210, 3192, -876, -2364, 151, -225, -255, 3214, -882, -2372, 211, 146, -100, 3212, -907, -2350, 201, -38, -128, 3196, -883, -2355, 109, -486, -118, 3148, -929, -2371, 146, -52, -139, 3200, -926, -2390, 128, -520, -138, 3190, -905, -2382, 109, -94, -55, 3195, -914, -2378, 175, -16, -153, 3113, -887, -2385, 184, -304, -103, 3111, -896, -2368, 250, -104, -291, 3108, -931, -2346, 243, -238, -209, 3115, -907, -2339, 178, 447, -442, 3177, -947, -2329, 191, -40, -345, 3121, -942, -2332, 131, 161, -331, 3207, -895, -2303, 168, -84, -474, 3201, -926, -2338, 60, -373, -232, 3269, -924, -2392, 108, 288, -225, 3266, -893, -2367, 135, -337, 70, 3132, -1007, -2414, 151, -565, -43, 3181, -973, -2387, 401, -524, -244, 3125, -1119, -2483, 274, -753, -9, 3127, -1061, -2429, 560, -545, -543, 3147, -1205, -2470, 500, -679, -487, 3123, -1172, -2480, 671, 57, -330, 3179, -1213, -2444, 605, -404, -497, 3129, -1216, -2442, 734, 141, -136, 3222, -1189, -2359, 716, -431, -226, 3267, -1197, -2455, 597, 254, 222, 3112, -1134, -2348, 769, 406, 16, 3197, -1140, -2403, 377, 2835, 117, 3088, -1195, -2248, 502, 2177, 275, 3082, -1172, -2272, 560, 2729, -215, 3220, -1126, -2285, 332, 3879, -16, 3033, -1215, -2174, 833, 2665, -762, 3239, -981, -1998, 596, 1239, -711, 3289, -996, -2133, 744, 1858, -652, 3527, -845, -2021, 724, 3224, -686, 3436, -930, -2142, 821, 1227, -436, 3802, -732, -1827, 1022, 1251, -364, 3624, -799, -1875, 453, 580, -98, 3591, -693, -1819, 758, 539, -377, 3702, -715, -1803, 328, -1395, 148, 3533, -729, -1707, 565, -1421, 169, 3594, -
    #         702, -1746, -324, -2410, 191, 3211, -1079, -1899, 64, -2178, 46, 3332, -832, -1775, 468, 166, -715, 3157, -1063, -1695, -143, -1606, -172, 3301, -1172, -1799, 378, -185, -1301, 3369, -1125, -2016, 557, 1643, -900, 3300, -1060, -2044, 416, 129, -870, 3453, -766, -1823, 320, 488, -928, 3372, -948, -1802, -147, -245, -521, 3602, -752, -1717, 291, -391, -421, 3462, -761, -1741, -730, -763, -719, 3437, -842, -1743, -395, -629, -632, 3536, -807, -1729, -785, -53, -269, 3458, -893, -1863, -794, -728, -358, 3386, -855, -1724, -727, 700, -326, 3439, -869, -1876, -802, -790, -366, 3395, -896, -1884, -469, 701, -117, 3259, -797, -1948, -518, 143, -398, 3407, -817, -1926, -270, 842, -331, 3235, -885, -1917, -493, 1370, -128, 3295, -847, -2004, -303, 1947, -722, 2984, -725, -1826, -205, 1310, -560, 3095, -816, -1885, -216, 2481, -981, 2885, -578, -1555, -209, 1932, -707, 2961, -652, -1677, -277, 3731, -1573, 2856, -358, -1593, -253, 4552, -1353, 2776, -436, -1566, -341, 4079, -3035, 2679, -260, -1530, -341, 2790, -2280, 2844, -367, -1520, 115, 3620, -4544, 2826, -83, -1497, -188, 4176, -3844, 2742, -164, -1590, 805, 5487, -6141, 2919, 326, -1555, 362, 5352, -5253, 2819, 89, -1459, 2050, 6276, -7496, 3119, 774, -1262, 1424, 4429, -6787, 3019, 566, -1412, 3314, 6433, -8209, 3433, 1233, -934, 2772, 6237, -7952, 3287, 1006, -1179, 4725, 8079, -8151, 3672, 1759, -628, 4025, 7883, -8194, 3590, 1473, -801, 6083, 10121, -7482, 3818, 2197, -294, 5460, 9282, -7849, 3752, 2028, -435, 7768, 10003, -7098, 3853, 2431, 176, 7021, 9472, -7174, 3814, 2295, -15, 8837, 6814, -6361, 3686, 2744, 519, 8412, 8363, -6807, 3750, 2558, 277, 9692, 9016, -6323, 3695, 3230, 572, 9110, 8892, -6465, 3656, 3013, 618, 11460, 9205, -5886, 3495, 3738, 670, 10504, 8455, -6268, 3641, 3486, 741, 12975, 10154, -4191, 3461, 3996, 944, 12197, 8582, -4953, 3626, 3900, 817, 13708, 10479, -1879, 3441, 4380, 896, 13232, 11165, -2881, 3383, 4191, 777, 3859, -6161, -413, 483, -1805, -2934, 7999, 18074, 26173, 25757, -6173, -27991, -78, 114, 84, -781, -3317, -2213, 2168, -5385, -361, -941, -3243, -2182, -369, -736, 893, -1022, -3347, -2246, 124, 803, -1205, -964, -3402, -2298, -36, 399, -674, -973, -3370, -2257, -170, -42, 8, -791, -3325, -2184, -51, 244, -405, -847, -3334, -2243, -367, -605, 702, -939, -3342, -2256, -168, -386, 358, -837, -3307, -2218, -97, -80, -41, -945, -3355, -2278, -30, -97, 115, -901, -3375, -2273, 163, 480, -738, -875, -3320, -2232, -28, -344, 316, -1024, -3348, -2214, 61, 334, -498, -927, -3385, -2248, 199, 514, -863, -939, -3366, -2267, -83, -492, 673, -812, -3356, -2224, 69, 181, -414, -813, -3280, -2184, -201, -858, 1009, -961, -3304, -2222, -243, -501, 323, -932, -3329, -2187, 11, 144, -409, -980, -3313, -2233, -246, 241, -459, -797, -3372, -2197, -126, -4, -234, -824, -3339, -2156, -386, -710, 890, -875, -3329, -2211, -40, 471, -997, -998, -3358, -2219, 52, 312, -629, -1123, -3425, -2296, 97, 795, -1007, -750, -3385, -2256, 383, 546, -898, -841, -3385, -2103, -306, -1496, 1840, -906, -3379, -2150, -216, -1270, 952, -859, -3540, -2106, 97, -381, 177, -1105, -3488, -2174, -188, -699, -110, -1132, -3574, -2059, 22, -26, -931, -918, -3545, -2039, 238, 219, -1092, -912, -3547, -1963, -272, -1205, 486, -935, -3533, -1954, -93, -1540, 1119, -802, -3538, -1996, 285, -274, -650, -1104, -3651, -2143, 522, 273, -793, -1228, -3505, -2079, 784, 1327, -2271, -852, -3464, -1982, 966, 4038, -4882, -597, -3426, -1899, -112, -599, 1140, -571, -3400, -1846, 369, 1580, -2246, -826, -3568, -2195, 187, 2322, -2328, -999, -3531, -2027, -551, 163, -760, -247, -3311, -2031, -238, -208, -804, -726, -3454, -2307, -132, -143, -836, -910, -3489, -2455, 749, 4330, -5985, -582, -3433, -2251, 620, 1858, -3500, -151, -3382, -2470, -175, -1815, 1216, -72, -3434, -2356, 146, -481, -289, -516, -3297, -2399, 32, 237, -719, -541, -3430, -2596, 450, -294, -279, -312, -3275, -2427, 56, -1836, 2060, -281, -3227, -2282, 186, -881, 608, -719, -3486, -1985, -335, -1645, 2036, -579, -3329, -2169, -93, 1224, -2854, 364, -3199, -1851, -1211, -4382, 5380, 19, -3365, -1950, -884, -519, -870, -1148, -3703, -2314, 206, 3990, -4984, -751, -3567, -2224, -118, 1303, -2226, 60, -3115, -2063, -1245, -3683, 3874, -277, -3237, -1999, -1255, -2499, 3417, -470, -3414, -2523, 376, 1838, -2513, -843, -3321, -2449, -525, 1220, -1049, -590, -3243, -2133, -742, -22, 333, 59, -3369, -2286, -314, 1087, -378, -233, -3378, -2215, -900, -1174, 2664, -444, -3262, -2101, -792, -86, 1360, -252, -3287, -2180, -484, 645, 206, -589, -3335, -2237, -365, 822, 38, -724, -3236, -2225, -5, 2011, -1919, -428, -3218, -2173, -276, 1447, -1334, -464, -3204, -2136, -431, 825, -62, -411, -3258, -2142, -880, 1161, -818, -433, -2847, -1992, -641, 1083, -836, -583, -3082, -2173, -1120, 1471, -1478, -243, -2666, -2116, -586, 1812, -1905, -374, -2775, -2029, -935, 4292, -5875, -661, -2698, -2369, -1160, 3555, -3436, -16, -2573, -2146, -2842, 2326, -3822, 321, -2484, -2364, -3082, -844, 724, -478, -2544, -2316, -4178, 185, -2790, -363, -2367, -2496, -3128, 4000, -6814, -389, -2463, -2413, -4302, 3698, -9434, -88, -2192, -2823, -4787, 1392, -4976, 437, -2308, -2682, -6154, -739, -5889, 868, -1917, -2997, -5609, -1012, -4843, -134, -2095, -3042, -6042, -1113, -7680, 490, -1730, -3434, -4694, 2950, -12086, 580, -1895, -3313, -4519, 1542, -12914, 1198, -1437, -3729, -5112, -57, -9782, 1274, -1581, -3461, -3574, 684, -13427, 1510, -1241, -3946, -4249, 750, -12037, 1236, -1243, -3801, -2840, -193, -14237, 1846, -986, -3911, -3425, -884, -12309, 1775, -1166, -3991, -2436, -4472, -10500, 2040, -596, -4158, -2226, -1769, -13257, 1526, -791, -3953, -1180, -657, -16519, 2086, -342, -4278, -2175, -1921, -13982, 2553, -453, -4180, -308, -2910, -15976, 2312, 237, -4262, -1340, -4015, -13506, 2187, -85, -4442, 1909, -1838, -17830, 2465, 342, -4375, 684, -3403, -15394, 2362, 297, -4245, 4093, -3100, -16276, 2105, 588, -4523, 3564, -906, -18526, 2027, 479, -4489, 1816, -4401, 574, 3135, 21, -2470, -20154, -2853, -1440, 18768, -11225, -27621, 1989, -4603, 195, 3050, -1064, -2341, 1816, -4401, 574, 3135, 21, -2470, -47, 521, -125, 3171, -1098, -2359, 1989, -4603, 195, 3050, -1064, -2341, -30, -69, -188, 3222, -1132, -2402, -47, 521, -125, 3171, -1098, -2359, -75, 80, -238, 3138, -1120, -2373, -30, -69, -188, 3222, -1132, -2402, -56, 26, -235, 3147, -1115, -2364, -75, 80, -238, 3138, -1120, -2373, -61, -132, -258, 3175, -1118, -2367, -56, 26, -235, 3147, -1115, -2364, -92, 84, -258, 3151, -1098, -2369, -61, -132, -258, 3175, -1118, -2367, -33, 27, -228, 3164, -1087, -2360, -92, 84, -258, 3151, -1098, -2369, -17, -61, -199, 3186, -1082, -2330, -33, 27, -228, 3164, -1087, -2360, 12, 173, -180, 3147, -1071, -2314, -17, -61, -199, 3186, -1082, -2330, 68, 119, -123, 3148, -1080, -2329, 12, 173, -180, 3147, -1071, -2314, 23, 327, -115, 3206, -1106, -2358, 68, 119, -123, 3148, -1080, -2329, 33, 76, -96, 3173, -1123, -2405, 23, 327, -115, 3206, -1106, -2358, 0, -305, -53, 3123, -1120, -2384, 33, 76, -96, 3173, -1123, -2405, -41, 74, -89, 3193, -1112, -2364, 0, -305, -53, 3123, -1120, -2384, -6, -367, -80, 3192, -1100, -2342, -41, 74, -89, 3193, -1112, -2364, -6, -85, -150, 3132, -1084, -2329, -6, -367, -80, 3192, -1100, -2342, 52, 117, -130, 3144, -1080, -2348, -6, -85, -150, 3132, -1084, -2329, 44, -45, -209, 3154, -1103, -2318, 52, 117, -130, 3144, -1080, -2348, 59, 51, -265, 3125, -1120, -2325, 44, -45, -209, 3154, -1103, -2318, 77, 179, -268, 3171, -1129, -2309, 59, 51, -265, 3125, -1120, -2325, 19, 587, -338, 3223, -1141, -2323, 77, 179, -268, 3171, -1129, -2309, 54, 52, -335, 3136, -1116, -2336, 19, 587, -338, 3223, -1141, -2323, 8, 403, -281, 3120, -1092, -2315, 54, 52, -335, 3136, -1116, -2336, 0, 382, -188, 3228, -1103, -2367, 8, 403, -281, 3120, -1092, -2315, 44, -256, -156, 3184, -1132, -2370, 0, 382, -188, 3228, -1103, -2367, -23, -339, -153, 3071, -1176, -2359, 44, -256, -156, 3184, -1132, -2370, 74, -263, -58, 3111, -1211, -2347, -23, -339, -153, 3071, -1176, -2359, 153, -550, -111, 3206, -1266, -2310, 74, -263, -58, 3111, -1211, -2347, 262, -420, -218, 3240, -1328, -2362, 153, -550, -111, 3206, -1266, -2310, 332, -560, -319, 3188, -1373, -2409, 262, -420, -218, 3240, -1328, -2362, 376, -392, -410, 3097, -1404, -2393, 332, -560, -319, 3188, -1373, -2409, 461, -254, -341, 3026, -1419, -2375, 376, -392, -410, 3097, -1404, -2393, 477, 169, -218, 3054, -1414, -2392, 461, -254, -341, 3026, -1419, -2375, 543, -348, -139, 3156, -1401, -2363, 477, 169, -218, 3054, -1414, -2392, 559, 387, -67, 3132, -1384, -2345, 543, -348, -139, 3156, -1401, -2363, 515, 480, 13, 3038, -1328, -2422, 559, 387, -67, 3132, -1384, -2345, 525, 597, 100, 3062, -1329, -2335, 515, 480, 13, 3038, -1328, -2422, 375, 2688, 43, 3092, -1363, -2271, 525, 597, 100, 3062, -1329, -2335, 457, 3201, 48, 3108, -1377, -2188, 375, 2688, 43, 3092, -1363, -2271, 493, 4106, -126, 3204, -1383, -2144, 457, 3201, 48, 3108, -1377, -2188, 495, 2447, -238, 3372, -1299, -2201, 493, 4106, -126, 3204, -1383, -2144, 689, 1509, -312, 3438, -1182, -1996, 495, 2447, -238, 3372, -1299, -2201, 598, 3035, -628, 3364, -1173, -1961, 689, 1509, -312, 3438, -1182, -1996, 782, 3273, -600, 3338, -1122, -2061, 598, 3035, -628, 3364, -1173, -1961, 771, 1551, -276, 3400, -1047, -1954, 782, 3273, -600, 3338, -1122, -2061, 597, 1450, -360, 3652, -1021, -1900, 771, 1551, -276, 3400, -1047, -1954, 750, 1206, -278, 3722, -964, -1878, 597, 1450, -360, 3652, -1021, -1900, 501, 694, -337, 3596, -949, -1969, 750, 1206, -278, 3722, -964, -1878, 406, 240, -111, 3449, -898, -1949, 501, 694, -337, 3596, -949, -1969, 50, -1261, -80, 3442, -923, -1911, 406, 240, -111, 3449, -898, -1949, -29, -1517, 81, 3524, -943, -1826, 50, -1261, -80, 3442, -923, -1911]
    data = [100, -6123, 1428, 975, 1763, -138, -17881, -22686, -20469, 3275, -32193, -679, -132, 397, 87, 2000, 3488, -330, 141, -4703, 866, 1991, 3503, -283, 224, -1374, 196, 1925, 3586, -239, -51, -388, 154, 1903, 3535, -339, 92, 889, -272, 1931, 3593, -80, 209, -28, -96, 1965, 3616, -144, -150, 1391, -228, 1936, 3371, 121, -82, 1510, -262, 1919, 3417, 17, -517, 1534, -541, 1921, 3519, 435, -317, 1132, -381, 1942, 3484, 253, -1141, 818, -829, 2025, 3607, 934, -651, 1031, -724, 1965, 3568, 669, -2444, -732, -513, 2093, 3695, 1624, -1793, 461, -785, 2073, 3647, 1248, -5054, -523, -187, 2332, 4007, 2488, -3596, -1026, -185, 2236, 3810, 2062, -8374, -1458, 370, 2505, 4458, 3137, -6611, -794, -9, 2345, 4231, 2855, -13069, 990, 633, 2662, 5111, 3785, -10745, -733, 590, 2557, 4715, 3497, -16796, 1266, 228, 2818, 5786, 3776, -14871, 881, 423, 2850, 5566, 3872, -19605, -2316, 2029, 2927, 6168, 3709, -18362, -1722, 866, 2882, 5904, 3688, -21059, -5708, 4688, 2827, 5940, 3045, -20283, -4197, 3426, 2887, 6256, 3396, -20677, -2238, 5653, 2395, 4888, 2507, -21216, -5133, 5679, 2661, 5420, 2860, -17581, -1124, 4546, 1991, 3633, 1736, -19471, -622, 5107, 2135, 4278, 2092, -14885, -1367, 3999, 1607, 2317, 960, -15988, -1585, 4176, 1770, 3006, 1377, -11872, -1971, 3296, 1490, 1140, 604, -13574, -3047, 3884, 1600, 1653, 734, -8057, -2130, 1297, 1383, 236, -84, -10223, -180, 2358, 1361, 696, 169, -4357, -47, -486, 1360, -408, -404, -6071, -988, 266, 1342, -127, -181, -515, -1086, -1927, 1553, -651, -386, -2301, -2488, -1174, 1472, -574, -400, 3246, -2198, -3204, 1839, -494, -358, 1275, -1224, -2601, 1689, -650, -475, 6765, -2522, -4186, 1990, 204, -502, 5004, -747, -3785, 1944, -238, -372, 9697, -3841, -4816, 2050, 1446, -423, 8259, -4074, -4438, 1993, 775, -416, 13033, -2238, -6623, 2150, 3062, -332, 11359, -4437, -5665, 2139, 2213, -274, 16434, -2493, -9696, 2441, 5120, 45, 15277, -7105, -7855, 2267, 4104, -303, 20747, -1307, -10928, 2636, 7228, 278, 18567, -362, -10396, 2335, 6070, 139, 24773, 407, -11780, 2745, 9004, 1131, 22182, 712, -12132, 2819, 8256, 778, 26784, 3928, -11852, 2506, 10380, 1260, 25526, 4946, -12004, 2649, 9702, 1240, 25666, 12146, -10384, 2493, 10306, 1802, 26786, 2347, -11927, 2511, 10631, 1720, 24469, 4694, -5904, 2267, 9873, 766, 24840, 12837, -7572, 2417, 10033, 828, 23749, 6546, -5144, 2350, 8657, 696, 23910, 5727, -5688, 2393, 9404, 970, 23235, 515, -3272, 2895, 7135, 816, 23668, 3001, -3694, 2566, 8031, 555, 19252, 3390, -1033, 2794, 4995, 431, 21799, 3276, -2397, 2848, 6061, 566, 15174, 2986, 1408, 2398, 2881, -29, 17067, 6546, 385, 2753, 3786, 411, 10516, 497, 1825, 2058, 1523, -489, 13031, 921, 2033, 2158, 2186, -215, 6487, -326, 1194, 1733, 569, -857, 8460, -967, 1535, 1787, 935, -662, 3482, 113, 345, 1614, 294, -1243, 4863, -412, 720, 1678, 406, -1028, 951, -948, 107, 1525, 181, -1585, 2116, -636, 89, 1592, 214, -1434, -1315, -1263, -180, 1381, 204, -1906, -291, -812, 39, 1434, 210, -1809, -3106, -1281, -1139, 1323, 299, -2171, -2136, -1308, -585, 1373, 210, -1985, -4758, 1761, -1916, 1289, 738, -2100, -4029, -957, -1560, 1267, 480, -2129, -6138, 3185, -3207, 1388, 1441, -2026, -5447, 2472, -2503, 1378, 985, -2136, -7225, 3893, -4983, 1714, 2220, -2197, -7036, 5403, -3951, 1527, 1909, -1965, -8027, 11363, -4798, 2304, 2773, -1500, -7571, 2750, -4946, 1846, 2479, -1721, -8888, 9424, -5782, 3104, 2954, -1669, -8848, 13578, -5668, 2705, 2986, -1899, -9874, 1684, -4785, 3269, 3055, -1242, -9356, 6455, -5747, 3358, 2936, -1565, -12439, 4150, -3430, 3173, 3567, -798, -10764, 834, -3538, 3302, 3215, -880, -13444, 1395, -3845, 2946, 4346, -1171, -13468, 5524, -3562, 2970, 4108, -941, -12253, -2298, -3360, 2728, 4389, -1320, -12972, -1858, -4006, 2775, 4352, -1254, -10147, -1346, -2321, 2582, 4520, -1874, -11370, -1796, -2813, 2714, 4510, -1519, -5892, -8791, -2195, 2492, 4074, -1934, -8162, -5611, -1981, 2809, 4222, -2031, -3219, -3496, -1164, 2221, 3746, -1701, -4613, -4948, -1643, 2010, 4024, -1874, 3571, -5756, -704, 276, 594, -1910, 24447, 18138, 26173, 26269, -14357, -27991, 85, 430, -80, 491, 1088, -3859, 2433, -4538, -1026, 507, 1113, -3872, 160, -1480, 1688, 434, 1181, -3915, 317, 555, -353, 337, 1169, -3812, 7, 1770, -1979, 839, 1286, -3796, -211, -1237, 1375, 932, 1268, -3873, -459, 389, 122, 770, 1160, -3618, -309, 1218, -1137, 520, 1150, -3686, -918, 627, 166, 1044, 1339, -3655, -397, 1248, -929, 924, 1267, -3716, -1319, 962, 494, 1294, 1462, -3642, -1000, 815, 10, 1264, 1414, -3628, -1715, -62, 3554, 1747, 1667, -3499, -1601, 312, 1962, 1471, 1545, -3576, -2284, 1263, 5886, 2561, 1821, -3709, -1838, 294, 4874, 2132, 1685, -3616, -2775, 4249, 7879, 3032, 2047, -3892, -2526, 2940, 6480, 2835, 2046, -3690, -3951, 7172, 11258, 3632, 2324, -4282, -3164, 5703, 9237, 3178, 2138, -4067, -4591, 13240, 9847, 3798, 2567, -4585, -4221, 9380, 11231, 4162, 2425, -4596, -4326, 8741, 19106, 3626, 2537, -4517, -4636, 12773, 12559, 3150, 2488, -4573, -1580, 14176, 15786, 3212, 2151, -4400, -2597, 11861, 17565, 4065, 2603, -4393, -1149, 11499, 18652, 4055, 1663, -3541, -1903, 9424, 21774, 3243, 1696, -4112, -1265, 14450, 10994, 2548, 1106, -3007, -730, 15904, 11886, 3602, 1536, -3194, -1339, 11431, 10209, 1971, 510, -1921, -1748, 10570, 12926, 2174, 833, -2440, -1765, 5070, 12235, 1725, -317, -1469, -1243, 9778, 9356, 1421, -87, -1825, -1537, 8043, 2485, 913, -936, -1222, -1237, 8442, 5713, 1905, -459, -1148, -1947, 2984, 1816, 1127, -1223, -637, -2703, 1613, 6475, 846, -1100, -896, -2404, -3421, 2947, 959, -1532, -749, -1630, 1361, 332, 576, -1485, -852, -1486, -4355, -2129, 869, -1559, -1054, -1403, -1318, -2717, 1139, -1544, -737, -248, -4658, -7187, 786, -1145, -1484, -1504, -5879, -3086, 1236, -1381, -1143, -428, -12429, -3444, 1110, -301, -2403, -237, -9610, -4077, 458, -818, -2024, -293, -11434, -10239, 1372, 602, -3490, -254, -11987, -6860, 1585, 196, -2884, -2988, -20959, -6016, 2185, 1827, -4844, 479, -15125, -10085, 987, 1003, -4575, -524, -12903, -20214, 1905, 2526, -6196, -
            1687, -14502, -16925, 2841, 2391, -4874, -3077, -24251, -13280, 3739, 3946, -6656, -1316, -21659, -15974, 1913, 3499, -6586, 597, -13496, -26923, 1650, 4162, -7250, -1116, -12065, -29050, 3589, 3973, -6859, -1908, -15430, -20296, 3649, 4713, -6362, 388, -22178, -19883, 1905, 4667, -7392, 8462, -8524, -23138, -1090, 3197, -7999, 5960, 4673, -32356, 1967, 3474, -6691, 3678, -16802, -17523, 3288, 3837, -5593, 3467, -26279, -5660, 1006, 3940, -7200, 6968, -16643, -12831, 119, 1682, -5940, 8317, -3642, -28655, 1173, 2463, -5866, 7364, -6442, -18419, 888, 781, -4012, 5883, -14900, -12765, 1269, 1515, -4791, 8172, -4101, -13924, -536, -441, -3242, 7084, -5310, -14891, 321, 15, -3560, 5946, -4557, -7246, -419, -1025, -2542, 6399, -7759, -5279, -613, -726, -2937, 3517, -3515, -3205, -691, -1336, -1994, 4374, -4789, -3769, -796, -1263, -2189, 1622, -252, -3121, -906, -1512, -1891, 2382, -2272, -2621, -672, -1426, -1970, 23, -1010, 1059, -1341, -1552, -1900, 982, 58, -2091, -1402, -1523, -1863, -1198, 392, 1768, -1556, -1575, -1956, -189, 1011, -251, -1358, -1577, -1953, -2490, 2730, 626, -1652, -1544, -2138, -1966, 632, 2340, -1355, -1609, -2013, -4421, 4329, 897, -1085, -1147, -2323, -3831, 1141, 3628, -1527, -1318, -2242, -6338, 5373, 667, -1415, -703, -3103, -4898, 6293, -1042, -1423, -980, -2679, -6874, 8466, -3516, -1469, -330, -3583, -7269, 5815, 623, -773, -596, -3453, -8734, 11596, -2925, 1006, -292, -3990, -8666, 2464, 4847, -905, -142, -3622, -9923, 9483, -1702, -1891, -1171, -5073, -7118, 22391, -16769, -675, -633, -4628, -8779, 3885, 6724, 366, -295, -4092, -10113, 1671, 6591, -575, -825, -4450, -8995, 11252, 2683, 306, 199, -4752, -8377, 8699, 3580, 552, -271, -4523, -9599, 6013, 7127, -322, 339, -5147, -9303, 11409, 2541, -37, 401, -5048, -7832, 5875, 6967, 616, 918, -4602, -9493, 2245, 11205, 217, 669, -4721, -6436, 2873, 7274, -467, 567, -5096, -6501, 7323, 3478, -80, 887, -5065, -4836, -5264, 11175, 265, 892, -4581, -4671, -2471, 9247, -337, 502, -4891, -2377, -490, 3312, -210, 746, -4309, -2663, 1291, 2327, 241, 911, -4224, 1815, -4643, 674, 496, 1990, -405, -20026, -2597, -1424, 18770, -11225, -26853, 2395, -5705, 449, 1059, 3969, -781, 1815, -4643, 674, 496, 1990, -405, -138, 19, 141, 1031, 3939, -760, 2395, -5705, 449, 1059, 3969, -781, 19, -177, 207, 920, 3962, -755, -138, 19, 141, 1031, 3939, -760, 454, -1878, 174, 1026, 4055, -661, 19, -177, 207, 920, 3962, -755, -257, 168, 97, 1127, 4133, -540, 454, -1878, 174, 1026, 4055, -661, -882, 2139, -114, 1030, 4083, -555, -257, 168, 97, 1127, 4133, -540, -785, 1601, -290, 974, 3885, -538, -882, 2139, -114, 1030, 4083, -555, -930, 1411, -340, 1042, 3869, -440, -785, 1601, -290, 974, 3885, -538, -967, 1034, -391, 1078, 4006, -310, -930, 1411, -340, 1042, 3869, -440, -1393, 1246, -557, 1063, 4050, -177, -967, 1034, -391, 1078, 4006, -310, -1635, 620, -563, 1051, 4098, -78, -1393, 1246, -557, 1063, 4050, -177, -2057, 329, -570, 1019, 4124, 68, -1635, 620, -563, 1051, 4098, -78, -2624, -215, -423, 953, 4139, 245, -2057, 329, -570, 1019, 4124, 68, -3198, -1588, -169, 915, 4169, 422, -2624, -215, -423, 953, 4139, 245, -4223, -2155, 79, 1062, 4291, 680, -3198, -1588, -169, 915, 4169, 422, -5715, -2113, 383, 1178, 4478, 946, -4223, -2155, 79, 1062, 4291, 680, -7214, -2813, 597, 1106, 4596, 1131, -5715, -2113, 383, 1178, 4478, 946, -8809, -3876, 918, 1203, 4685, 1281, -7214, -2813, 597, 1106, 4596, 1131, -10984, -3233, 1215, 1400, 4834, 1541, -8809, -3876, 918, 1203, 4685, 1281, -13568, -1921, 1106, 1469, 5062, 1880, -10984, -3233, 1215, 1400, 4834, 1541, -15488, -2410, 1161, 1574, 5270, 2123, -13568, -1921, 1106, 1469, 5062, 1880, -17080, -2385, 1244, 1382, 5138, 2083, -15488, -2410, 1161, 1574, 5270, 2123, -17444, -5874, 1852, 1120, 4903, 2193, -17080, -2385, 1244, 1382, 5138, 2083, -18457, -6909, 2816, 1146, 4948, 2521, -17444, -5874, 1852, 1120, 4903, 2193, -18470, -9167, 3772, 1244, 4844, 2451, -18457, -6909, 2816, 1146, 4948, 2521, -18218, -10257, 4875, 1481, 4416, 2411, -18470, -9167, 3772, 1244, 4844, 2451, -18708, -8604, 5506, 1869, 3999, 2856, -18218, -10257, 4875, 1481, 4416, 2411, -20015, -2911, 5326, 1964, 3726, 3121, -18708, -8604, 5506, 1869, 3999, 2856, -18965, -2626, 4357, 1698, 3360, 2966, -20015, -2911, 5326, 1964, 3726, 3121, -17071, -4385, 3893, 1563, 2901, 2757, -18965, -2626, 4357, 1698, 3360, 2966, -15353, -4760, 3585, 1481, 2419, 2326, -17071, -4385, 3893, 1563, 2901, 2757, -13922, -4057, 3296, 1418, 1831, 1859, -15353, -4760, 3585, 1481, 2419, 2326, -11932, -5232, 3084, 1674, 1449, 1855, -13922, -4057, 3296, 1418, 1831, 1859, -10916, -3771, 2462, 1923, 1297, 1971, -11932, -5232, 3084, 1674, 1449, 1855, -9426, -2182, 1568, 1993, 1047, 1711, -10916, -3771, 2462, 1923, 1297, 1971, -6770, -3736, 819, 2068, 740, 1529, -9426, -2182, 1568, 1993, 1047, 1711, -5675, -1673, 7, 1997, 477, 1374, -6770, -3736, 819, 2068, 740, 1529, -3774, -1167, -674, 1991, 263, 1162, -5675, -1673, 7, 1997, 477, 1374, -1153, -2809, -1097, 2114, 192, 1249, -3774, -1167, -674, 1991, 263, 1162, -82, -518, -1685, 2225, 172, 1230, -1153, -2809, -1097, 2114, 192, 1249, 2276, -1112, -2207, 2262, 181, 1186, -82, -518, -1685, 2225, 172, 1230, 4152, -990, -2638, 2315, 318, 1293, 2276, -1112, -2207, 2262, 181, 1186, 5535, 378, -3076, 2286, 497, 1106, 4152, -990, -2638, 2315, 318, 1293, 8015, -1476, -3195, 2068, 789, 861, 5535, 378, -3076, 2286, 497, 1106, 9810, -1732, -3456, 2016, 1270, 866, 8015, -1476, -3195, 2068, 789, 861, 11498, -1931, -3965, 2040, 1857, 960, 9810, -1732, -3456, 2016, 1270, 866, 12995, -1099, -4635, 2118, 2505, 1173, 11498, -1931, -3965, 2040, 1857, 960, 14635, -192, -5620, 2108, 3171, 1079, 12995, -1099, -4635, 2118, 2505, 1173, 17870, -3984, -6724, 2175, 3951, 1255, 14635, -192, -5620, 2108, 3171, 1079, 17619, 2538, -8191, 1980, 4539, 1551, 17870, -3984, -6724, 2175, 3951, 1255, 19334, 2856, -9086, 1637, 5001, 1469, 17619, 2538, -8191, 1980, 4539, 1551, 21199, 3754, -9610, 1970, 5863, 1666, 19334, 2856, -9086, 1637, 5001, 1469]

    print(len(data))
    print(f'{"="*20} Testing {"="*20}\n')
    t, aa, x, y, z, ax, ay, az, d, accel, taa, tla = process_data(data)
    v, vf_m, fv = get_club_head_speed(z, accel)
    print(f"INTIAL DATA: {t}\n")
    print(
        f'CLUB HEAD SPEED: \n\n{tabulate(zip(x,y,z,accel,v,vf_m), headers=["x (g)", "y (g)", "z (g)", "total (m/s^2)", "v (m/s i think)", "v (mph)"], tablefmt="pretty")}\n')
    print(f'FINAL VELOCITY: {fv} mph\n')
    print(f'{"="*10} ACCEL {"="*10}\n')
    print('INITIAL ANGULAR ACCELERATION: ', aa, '\n')
    print(
        f'ANGULAR ACCELERATION: \n\n{tabulate(zip(ax,ay,az,d), headers=["x (??)", "y (??)", "z (??)", "dir"], tablefmt="pretty")}\n')

    print(f'{"="*10} BALL SPEED {"="*10}\n')
    print(f'BALL SPEED: {get_ball_speed("driver", fv):.2} mph\n')

    print(f'{"="*10} BALL DISTANCE {"="*10}\n')
    print(
        f'BALL DISTANCE: {get_ball_distance(fv, get_ball_speed("driver", fv)):.2} yards\n')

    print(f'{"="*10} SMASH FACTOR {"="*10}\n')
    print(
        f'SMASH FACTOR: {get_smash_factor(fv, get_ball_speed("driver", fv)):.2}\n')

    x_pos, y_pos, z_pos = get_club_position_data(t)
    print(f'{"="*10} POSITION {"="*10}\n')
    # print(pos[2:])

    print(f"{'='*10} CLUB FACE ANGLE {'='*10}\n")
    print(f'{get_club_face_angle(ay)} degrees\n')

    print(f'{"="*10} PLOT {"="*10}\n')
    plot_position(x_pos, y_pos, z_pos)
    plot_acceleration(tla, taa, vf_m)
